/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package education4sudanschoolclient;

import com.google.gson.Gson;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.CharBuffer;
import javax.swing.JFileChooser;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileSystemView;
import sun.misc.IOUtils;

/**
 *
 * @author Hugh
 */
public class ResourcesForm extends javax.swing.JDialog {
    
    private static final String INVENTORY_FILE_NAME = "inventory.json";
    private static final int DEFAULT_CHARACTER_BUFFER_WIDTH = 200;
    
    private class InventoryItem {
        private String name;
        private int count;
        
        public String getName() {
            return this.name;
        }
        
        public int getCount() {
            return this.count;
        }
        
        public void setCount(int count) {
            this.count = count;
        }
        
        public InventoryItem() {
            // TODO Needed for Gson I think?
        }
        
        public InventoryItem(String resource, int count) {
            this.name = resource;
            this.count = count;
        }
    }
    
    private InventoryItem[] inventory;
    
    private String getInventoryFileLocation() {
        JFileChooser fileChooser = new JFileChooser();
        FileSystemView fileSystemView = fileChooser.getFileSystemView();
        String inventoryFileLocation = fileSystemView.getDefaultDirectory().toString() + "/" + INVENTORY_FILE_NAME;
        return inventoryFileLocation;
    }
    
    private void createEmptyInventoryFile() {
        String path = getInventoryFileLocation();
        
    }
    
    private void loadInventory() {
        JFileChooser fileChooser = new JFileChooser();
        FileSystemView fileSystemView = fileChooser.getFileSystemView();
        String inventoryFileLocation = fileSystemView.getDefaultDirectory().toString() + "/" + INVENTORY_FILE_NAME;
        
        FileReader fileReader;
        StringBuilder builder = new StringBuilder();
        try {
            fileReader = new FileReader(inventoryFileLocation);
            char c;
            while ((c = (char) fileReader.read()) != -1) {
                builder.append(c);
            }
            fileReader.close();
        }
        catch (FileNotFoundException e) {
            // No inventory file
            createEmptyInventoryFile();
            // Set builder?
        }
        catch (IOException e) {
            // Set builder?
        }
        
        String inventoryJSON = builder.toString();
        Gson gson = new Gson();
        InventoryItem item = gson.fromJson(inventoryJSON, InventoryItem.class);
    }
    
    private InventoryItem getTableRow(int rowIndex) throws IllegalArgumentException {
        if (rowIndex >= inventory.length) {
            throw new IllegalArgumentException("Argument out of range");
        }
        return inventory[rowIndex];
    }
    
    private class ResourceTableListener implements TableModelListener {

        @Override
        public void tableChanged(TableModelEvent e) {
            // Write change
            Gson gson = new Gson();
            InventoryItem item = getTableRow(e.getFirstRow());
            String text = gson.toJson(item, InventoryItem.class);            
        }
        
    }
    
    /**
     * Creates new form ResourcesForm
     */
    public ResourcesForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        requestsTable.getModel().addTableModelListener(new ResourceTableListener());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        inventoryLabel = new javax.swing.JLabel();
        resourcesSeparator = new javax.swing.JSeparator();
        requestsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Resource", "Count"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        inventoryTable.setName("inventoryTable"); // NOI18N
        jScrollPane1.setViewportView(inventoryTable);

        inventoryLabel.setText("Current Inventory");
        inventoryLabel.setName("inventoryLabel"); // NOI18N

        requestsLabel.setText("Requests");
        requestsLabel.setName("requestsLabel"); // NOI18N

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Request", "Response"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        requestsTable.setName("requestsTable"); // NOI18N
        jScrollPane3.setViewportView(requestsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
            .addComponent(resourcesSeparator)
            .addComponent(jScrollPane3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inventoryLabel)
                    .addComponent(requestsLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(inventoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resourcesSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(requestsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResourcesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResourcesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResourcesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResourcesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResourcesForm dialog = new ResourcesForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel inventoryLabel;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel requestsLabel;
    private javax.swing.JTable requestsTable;
    private javax.swing.JSeparator resourcesSeparator;
    // End of variables declaration//GEN-END:variables
}
